@page "/cart"
@inject NavigationManager Navigation

<h1>Shopping Cart</h1>

@if (cartItems.Count == 0)
{
    <p>Your cart is empty.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Item</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in cartItems)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>@item.Price.ToString("C")</td>
                    <td>
                        <InputNumber @bind-Value="item.Quantity" min="1" @onchange="() => UpdateTotal(item)" />
                    </td>
                    <td>@item.TotalPrice.ToString("C")</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => RemoveItem(item)">Remove</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <strong>Total: @cartItems.Sum(item => item.TotalPrice).ToString("C")</strong>
    </div>
    <div>
        <button class="btn btn-primary" @onclick="Checkout">Proceed to Checkout</button>
    </div>
}

@code {
    private List<CartItem> cartItems = new List<CartItem>
    {
        new CartItem { Id = 1, Name = "Item 1", Price = 10.00m, Quantity = 1 },
        new CartItem { Id = 2, Name = "Item 2", Price = 20.00m, Quantity = 2 }
    };

    private void RemoveItem(CartItem item)
    {
        cartItems.Remove(item);
    }

    private void UpdateTotal(CartItem item)
    {
        // Trigger state change for total calculation
        StateHasChanged();
    }

    private void Checkout()
    {
        // Implement your checkout logic here
        Navigation.NavigateTo("/checkout");
    }
}
